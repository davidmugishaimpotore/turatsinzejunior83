# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dwztzoZhhLg7F0ucHej4D9wzp2LTcerH
"""

file1 ="history is the systematic study of the past"
file2 ="history is the systematic study of the past this is just for practice"

def jacccard_similarity(text1,text2):
  #split text into sets of words
  set1=set(text1.split())
  set2=set(text2.split())
  #the jaccard_similarity function mow returns both similarity score and the set f common word
  #The intersection variable contains the word that appear in both text1 and text2.
  #The common_words set is printed alongside the similarity score.
  #Find intersection and union
  intersection = set1.intersection (set2)
  union= set1.union(set2)
  #calculate jaccard similarity
  similarity = len(intersection)/ len(union)
  #return similarity and intersection words
  return similarity, intersection
  #input texts
  text1 ="This is a sample sample text about is this legal samle issues."
  text2 ="This text legal discusses legal and ethical this issues in legal computing."
  #Calculate similarity and get common words
  #similarity,common_words = jaccard_similarity(text1, text2)
  #print results 0.29
  print(f"similarity: {similarity:.2f}")
  print(f"common words: {common_words}")
file1 ="history is the systematic study of the past"
file2 ="history is the systematic study of the past this is just for practice"

def jacccard_similarity(text1,text2):
  #split text into sets of words
  set1=set(text1.split())
  set2=set(text2.split())
  #the jaccard_similarity function mow returns both similarity score and the set f common word
  #The intersection variable contains the word that appear in both text1 and text2.
  #The common_words set is printed alongside the similarity score.
  #Find intersection and union
  intersection = set1.intersection (set2)
  union= set1.union(set2)
  #calculate jaccard similarity
  similarity = len(intersection)/ len(union)
  #return similarity and intersection words
  return similarity, intersection

#input texts
text1 ="This is a sample sample text about is this legal samle issues."
text2 ="This text legal discusses legal and ethical this issues in legal computing."
#Calculate similarity and get common words
#similarity,common_words = jaccard_similarity(text1, text2)
#print results 0.29
#print(f"similarity: {similarity:.2f}")
#print(f"common words: {common_words}")
#Calculate similarity between file1 and file2
similarity, common_words = jacccard_similarity(file1, file2)
print(f"similarity: {similarity:.2f}")
print(f"common words: {common_words}")